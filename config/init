#!/bin/bash
#
# Autor: Walt Byte <walt@gbyte.co>
# Name:  init
# Path:  <project_root_dir>/config/
#
# This script is part of
# drudenv: (Drupal in Docker - Development Environment) project

# services
webs=nginx
phps=php
dbss=mysql

# dirs/files
html_dir="./html"
scripts_dir="./config"
drupal_inst_script="install_drupal"

# ToDo: Test for dependencies!!!

## Test if ./html directory exists in order to avoid  an existing
## messing up an existing project.
if [ -d $html_dir ]; then
    echo "Error! Directory $html_dir exists!"
    echo "    Make sure you don't override an existing project?"
    exit 0
fi

mkdir $html_dir
cp $scripts_dir/$drupal_inst_script $html_dir/

docker-compose up -d

## Check if all the services are running (the containers are up)
status_tmp_file=_status_tmp_file

## ToDo: !!! turns out this is a terrible way to do this
## - the output file has its lines wrapped (!) when the terminal
##   width is to small!!!
## Urgent: replace with 'docker ps' which seems to work as expected!

docker-compose ps | tail -n +3 > $status_tmp_file

services_count=$(cat $status_tmp_file | wc -l)

services_up_count=$(grep ' Up ' $status_tmp_file | wc -l)

if [[ $services_up_count -ne $services_count ]]; then 
    echo
    echo "*** Something went wrong! ***"
    echo
    docker-compose ps
    echo
    echo "Exiting..."
    exit 0
fi

## otherwhise, since everything is ok
echo 
echo "All the services seem to be up:"
docker-compose ps

## Find out the name of the php container 
phps_container=$(grep _$(echo $phps)_ $status_tmp_file | cut -d' ' -f1 )

## Run 'install_drupal' script from within the php container. 
echo 
echo "Executing the \'$drupal_inst_script\' script..."
docker exec $phps_container ./$drupal_inst_script
echo "... Done"

## Find out and show the web server port
webs_port=$(grep _$(echo $webs)_ $status_tmp_file | cut -d':' -f2 | cut -d'-' -f1 )
echo 
echo "Web Server is running on port $webs_port"

## clean up
rm $status_tmp_file $drupal_inst_script 
echo 
